# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1
set $meh Mod1+Shift+Ctrl
set $hyper Mod1+Shift+Ctrl+Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:Terminus 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Initialize master layout switcher
#exec --no-startup-id python3 ~/.config/i3/i3-master-stack/i3_master_layout.py
#bindsym $mod+m nop swap master
#bindsym $mod+shift+m nop go master
#bindsym $mod+ctrl+m nop master toggle

# start a terminal
bindsym $meh+Return --release exec alacritty
# start scratchpad with Alt+Shift+Enter
bindsym $hyper+Return exec "/home/petr/archlinux-dotfiles/bin/launch-alacritty.sh && i3-msg 'move scratchpad' && i3-msg 'scratchpad show'"
#bindsym $mod+Return exec alacritty --config-file /dev/null

# kill focused window
bindsym $hyper+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $meh+j focus left
bindsym $meh+k focus down
bindsym $meh+l focus up
bindsym $meh+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $meh+Left focus left
bindsym $meh+Down focus down
bindsym $meh+Up focus up
bindsym $meh+Right focus right

# move focused window
bindsym $hyper+j move left
bindsym $hyper+k move down
bindsym $hyper+l move up
bindsym $hyper+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $hyper+Left move left
bindsym $hyper+Down move down
bindsym $hyper+Up move up
bindsym $hyper+Right move right

# split in horizontal orientation
bindsym $meh+h split h

# split in vertical orientation
bindsym $meh+v split v

# enter fullscreen mode for the focused container
bindsym $meh+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $meh+q layout tabbed
bindsym $meh+e layout toggle split

# toggle tiling / floating
bindsym $hyper+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $meh+a focus parent

# focus the child container
#bindsym $mod+d focus child

# When on workspace 1 and switching to workspace 2,
# trying to switch to workspace 2 again switches me
# to the previous one again
workspace_auto_back_and_forth yes

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
# Workspace for processes that have to run but I don't care about them (VPN connection, ...)
set $wsTrash "Trash"
# Additional workspaces because 11 is too few
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
# Workspace to quickly hide opened windows
set $wsEmpty "Empty"

# switch to workspace
bindsym $meh+1 workspace $ws1
bindsym $meh+2 workspace $ws2
bindsym $meh+3 workspace $ws3
bindsym $meh+4 workspace $ws4
bindsym $meh+5 workspace $ws5
bindsym $meh+6 workspace $ws6
bindsym $meh+7 workspace $ws7
bindsym $meh+8 workspace $ws8
bindsym $meh+9 workspace $ws9
bindsym $meh+0 workspace $ws10
bindcode $mod+174 workspace $wsTrash
bindsym ctrl+1 workspace $ws11
bindsym ctrl+2 workspace $ws12
bindsym ctrl+3 workspace $ws13
bindsym ctrl+4 workspace $ws14
bindsym ctrl+5 workspace $ws15
bindsym ctrl+6 workspace $ws16
bindsym ctrl+7 workspace $ws17
bindsym ctrl+8 workspace $ws18
bindsym ctrl+9 workspace $ws19

# move focused container to workspace
bindsym $hyper+1 move container to workspace $ws1
bindsym $hyper+2 move container to workspace $ws2
bindsym $hyper+3 move container to workspace $ws3
bindsym $hyper+4 move container to workspace $ws4
bindsym $hyper+5 move container to workspace $ws5
bindsym $hyper+6 move container to workspace $ws6
bindsym $hyper+7 move container to workspace $ws7
bindsym $hyper+8 move container to workspace $ws8
bindsym $hyper+9 move container to workspace $ws9
bindsym $hyper+0 move container to workspace $ws10
bindcode $mod+Shift+174 move container to workspace $wsTrash
bindsym ctrl+Shift+1 move container to workspace $ws11
bindsym ctrl+Shift+2 move container to workspace $ws12
bindsym ctrl+Shift+3 move container to workspace $ws13
bindsym ctrl+Shift+4 move container to workspace $ws14
bindsym ctrl+Shift+5 move container to workspace $ws15
bindsym ctrl+Shift+6 move container to workspace $ws16
bindsym ctrl+Shift+7 move container to workspace $ws17
bindsym ctrl+Shift+8 move container to workspace $ws18
bindsym ctrl+Shift+9 move container to workspace $ws19

# offer shutdown menu
bindsym $hyper+e exec "exit-menu"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $meh+r mode "default"
}

bindsym $meh+r mode "resize"




### NEW ###

for_window [class="^.*"] border pixel 0
gaps inner 0 # 10
gaps outer 0 # -10

# Start compton (with xrender backend)
 exec --no-startup-id picom --daemon --backend xrender
# Set background
exec --no-startup-id feh --bg-fill ~/archlinux-dotfiles/wallpaper.jpg
# Start polybar
exec --no-startup-id ~/archlinux-dotfiles/polybar/launch.sh
# Start redshift (blue light filter)
exec --no-startup-id redshift
# Setup keyboard
# # Remap capslock and escape
#exec --no-startup-id setxkbmap -option caps:swapescape
# # Add compose key
# # (so meta-~-n produces ñ or meta-^-8 produces ⁸)
#exec --no-startup-id setxkbmap -option compose:lwin

# Set dmenu alternative (rofi)
# Start rofi in combined mode, which allows user to either run new
# app or switch to already running one
bindsym $meh+d exec "rofi -show combi -combi-modi 'window,run' -modi combi"

# Set brightness
bindcode 232 exec change-brightness 0
bindcode 233 exec change-brightness 1
# Change keyboard
#bindsym $mod+Tab exec /usr/bin/change-keyboard
# Set volume
bindcode 121 exec pavolume --togmute
bindcode 122 exec pavolume --down
bindcode 123 exec pavolume --up
# Play/pause firefox
#bindcode 172 exec play-pause-firefox.sh
# Play/pause next/prev - any player (spotify)
bindcode 172 exec playerctl play-pause -p spotify
bindcode 171 exec playerctl next -p spotify
bindcode 173 exec playerctl previous -p spotify
# Use mod+(arrow key) to rotate laptop screen orientation
# Only numpad arrow keys work
# The variable $TARGET_DISPLAY is set in ~/archlinux-dotfiles/zsh/defaults.sh
# Up, Down, Left, Right:
bindcode $mod+80 exec "rotate-screen normal"
bindcode $mod+88 exec "rotate-screen inverted"
bindcode $mod+83 exec "rotate-screen left"
bindcode $mod+85 exec "rotate-screen right"
# Lock computer
#bindcode 133 exec lock-custom
bindsym Mod4+l exec lock-custom
# Use mod+space to hide everything currently onscreen by fullscreen feh
bindcode $meh+65 workspace $wsEmpty
# Take a screenshot
# Use PrtSc to take screenshot. By default it is saved into file.
# Use Ctrl to save only current window
# Use Shift to save to clipboard
# Use Win+S to select an area with mouse, copy it to tmp *and* clipboard
bindcode 107 exec maim ~/data/Pictures/Screenshot-$(date +%Y-%m-%d-%H-%M-%S).png
bindsym Shift+Print exec maim | xclip -selection clipboard -t image/png
bindsym Ctrl+Print exec maim -i $(xdotool getactivewindow) ~/data/Pictures/Screenshot-$(date +%Y-%m-%d-%H-%M-%S).png
bindsym Shift+Ctrl+Print exec maim -i $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym $meh+s exec manual-selection-screenshot
# Custom menus
bindsym $meh+t exec multimonitor-setup
# Make window sticky with alt+shift+s
bindsym $hyper+s sticky toggle

# Make firefox picture-in-picture sticky window
for_window [title="Picture-in-Picture"] sticky enable

# Gaming mode (disable all the default alt shortcuts except for alt+f (toggle fullscreen) and alt+shift+q (kill process)
# Allow some essentials keys as well, such as volume, brightness, or screenshots
set $gamingMode "🎮"
bindsym $mod+g mode $gamingMode

mode $gamingMode {
	bindsym $meh+Escape mode default
	bindsym $meh+f fullscreen toggle
	bindsym $hyper+q kill
	# Set volume hotkeys
	# 121 - mute, 122 - down, 123 - up
    bindcode 121 exec pavolume --togmute
    bindcode 122 exec pavolume --down
    bindcode 123 exec pavolume --up

	# Set brightness
	# 232 - lower brightness, 233 - increase brightness
	bindcode 232 exec brightness-down
	bindcode 233 exec brightness-up

	# Set screenshots
	bindcode 107 exec maim ~/data/Pictures/Screenshot-$(date +%Y-%m-%d-%H-%M-%S).png
	bindsym Shift+Print exec maim | xclip -selection clipboard -t image/png
	bindsym Ctrl+Print exec maim -i $(xdotool getactivewindow) ~/data/Pictures/Screenshot-$(date +%Y-%m-%d-%H-%M-%S).png
	bindsym Shift+Ctrl+Print exec maim -i $(xdotool getactivewindow) | xclip -selection clipboard -t image/png

	# Play/pause next/prev - any player (spotify)
	bindcode 172 exec playerctl play-pause
	bindcode 171 exec playerctl next
	bindcode 173 exec playerctl previous
}

# Define multimonitor setup
# Toggle workspace between monitors
bindsym $meh+x move workspace to output right

# Lock screen when lid is closed
exec --no-startup-id xss-lid -- lock-custom

# Start xss-lock and udiskie
# xss-lock locks screen when laptop is supsended
# udiskie automounts USBs
exec --no-startup-id xss-lock -- /usr/bin/lock-custom
exec --no-startup-id udiskie

# Start dunst notification service
# Might not be needed and not sure why it's there.
# But dunst stopped working after I installed
# Deepin (for other user on this PC, while
# I still use i3).
exec --no-startup-id dunst

# OCR copy text to clipboard
# (english)
bindsym $meh+c exec copy-from-screen
# (czech)
bindsym $hyper+c exec copy-from-screen ces

# Cycle graphical tablet output
bindsym $hyper+g exec cycle-wacom-output

# Focus some windows on $mod+Function key
bindsym $me+F1 [class="firefox"] focus
bindsym $meh+F2 [class="Alacritty"] focus
bindsym $meh+F3 [class="discord"] focus
bindsym $meh+F4 [class="Caprine"] focus
bindsym $meh+F5 [class="Thunderbird"] focus
